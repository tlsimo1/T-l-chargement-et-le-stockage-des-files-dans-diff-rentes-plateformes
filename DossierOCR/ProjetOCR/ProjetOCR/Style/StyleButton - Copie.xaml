<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <SolidColorBrush x:Key="CouleurPopUp" Color="#06c257"/>

    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#FFD4D7DE" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#FFD4D7DE" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#FFD4D7DE" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" x:Name="Border" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" CornerRadius="0" BorderThickness="1, 1, 1, 1" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" x:Name="ButtonBorder" CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Path x:Name="Arrow" Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="#444" VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FFD4D7DE"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FFD4D7DE"/>
                <Setter Property="Background" TargetName="ButtonBorder" Value="#FFD4D7DE"/>
                <Setter Property="Fill" TargetName="Arrow" Value="#FF8D979E" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Fill" TargetName="Arrow" Value="#FFD4D7DE"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="StyleComboFlatPrso"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Century Gothic"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter Name="ContentSite" Margin="10, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="#FFD4D7DE"
                             HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="#FFD4D7DE" Margin="0, 1, 0, 0" CornerRadius="0" BorderThickness="1,1,1,1" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="0 1 0 0" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="#FF878383"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Background="{TemplateBinding Background}" BorderThickness="0" Margin="0">
                                    <TextBlock Text="{TemplateBinding Content}" Margin="10 0 0 0" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextElement.Foreground" Value="White"/>
                            <Setter Property="Background" Value="#FF3C5BAD" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF3C5BAD" />
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="comboBoxFlatPerso"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Century Gothic"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter Name="ContentSite" Margin="10, 3, 23, 3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="#FFD4D7DE"
                             HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="#FFD4D7DE" Margin="0, 1, 0, 0" CornerRadius="0" BorderThickness="1,1,1,1" BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="0 1 0 0" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="#FF878383"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Background="{TemplateBinding Background}" BorderThickness="0" Margin="0">
                                    <TextBlock Text="{TemplateBinding Content}" Margin="10 0 0 0" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextElement.Foreground" Value="White"/>
                            <Setter Property="Background" Value="#FF3C5BAD" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF3C5BAD" />
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="bgVert">
        <GradientStop Color="#FF79CD08" Offset="0"/>
        <GradientStop Color="#FF65A80B" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="bgblue">
        <GradientStop Color="#FF646370" Offset="0"/>
        <GradientStop Color="#FF454554" Offset="1"/>
    </LinearGradientBrush>
    
    <Style TargetType="Button" x:Key="btnStyleGris">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#D4D7DE" />
        <Setter Property="Foreground" Value="#8E8E8E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#BEC1C7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Grid" x:Key="GridBackGround">
        <Setter Property="Background" Value="#FFF5F5F5"></Setter>
    </Style>
    <Style TargetType="Button" x:Key="btnEnabling">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1"  >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                                <Setter Property="Border.BorderBrush" Value="#FF79CD08" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="Century Gothic" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" Value="#FF79CD08" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                                <Setter Property="Border.BorderBrush" Value="#FF79CD08" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="Century Gothic" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" Value="#92F609" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="Century Gothic" />
                            <Setter Property="Background" Value="#8E8E8E" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
    </Style>

    <Style TargetType="Button" x:Key="btnEnablingBlue">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1"  >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                                <Setter Property="Border.BorderBrush" Value="#313445" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="Century Gothic" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" Value="#3D4A6D" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                                <Setter Property="Border.BorderBrush" Value="#313445" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="Century Gothic" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" Value="#495882" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="Century Gothic" />
                            <Setter Property="Background" Value="#8E8E8E" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
    </Style>

    <Style TargetType="Button" x:Key="styleVert2">
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Border.BorderBrush" Value="#FF79CD08" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#FF79CD08" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <Image VerticalAlignment="Center" Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="15" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              Margin="5 0 0 0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#92F609" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleVert">
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{StaticResource CouleurPopUp}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  >
                        <Grid Margin="10 0 10 0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image VerticalAlignment="Center" Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Width="15" Height="15" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center"
                                              Content="{TemplateBinding Content}" VerticalAlignment="Center" Grid.Column="1" Margin="0 -2 0 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#495882" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="styleBleu">
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Border.BorderBrush" Value="#313445" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#3D4A6D" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image VerticalAlignment="Center" Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="15" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              Margin="5 0 0 0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#495882" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleBleuRightIco">
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Border.BorderBrush" Value="#313445" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#3D4A6D" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
        							Content="{TemplateBinding Content}" 
        							VerticalAlignment="Center"/>
                            <Image VerticalAlignment="Center" Margin="5 0 0 0" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="10" RenderTransformOrigin="0.5,0.5" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#495882" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleRouge">
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Border.BorderBrush" Value="#CD0808" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#FF5240" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image VerticalAlignment="Center" Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="15" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              Margin="5 0 0 0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#CD5151" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleRond">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid>
                            <Ellipse Name="ellipseBtnRond" Stroke="#FF687989" Margin="0" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="2" Fill="{TemplateBinding Background}" >
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="0" Direction="179" BlurRadius="2" Opacity="0.915" RenderingBias="Quality"/>
                                </Ellipse.Effect>
                                <!--<Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF79CD08" Offset="0"/>
                                    <GradientStop Color="#FF65A80B" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>-->
                            </Ellipse>
                            <Label   FontSize="{TemplateBinding FontSize}"  x:Name="txtBtnRond" Foreground="White" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="Century Gothic" />

                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#FF65A80B" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ellipseBtnRond" Property="OpacityMask" Value="#7FFFFFFF" />
                                <Setter TargetName="txtBtnRond" Property="Foreground" Value="#FFEAEAEA" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleRondP">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid>
                            <Ellipse Name="ellipseBtnRond" Stroke="#FF687989" Margin="0" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="2" Fill="{TemplateBinding Background}" >
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="0" Direction="179" BlurRadius="2" Opacity="0.915" RenderingBias="Quality"/>
                                </Ellipse.Effect>
                                <!--<Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF79CD08" Offset="0"/>
                                    <GradientStop Color="#FF65A80B" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>-->
                            </Ellipse>
                            <Label   FontSize="{TemplateBinding FontSize}"  x:Name="txtBtnRond" Foreground="White" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="Century Gothic" />

                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#FF65A80B" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <!--<Setter TargetName="ellipseBtnRond" Property="OpacityMask" Value="#7FFFFFFF" />-->
                                <Setter TargetName="txtBtnRond" Property="Foreground" Value="#FFEAEAEA" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="styleRondBlue">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Margin" Value="0,-85,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Ellipse Name="ellipseBtnRond" Stroke="#FF687989" Margin="0" Width="100" Height="100" StrokeThickness="2" >
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0" Direction="179" BlurRadius="2" Opacity="0.915" RenderingBias="Quality"/>
                            </Ellipse.Effect>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF646370" Offset="0"/>
                                    <GradientStop Color="#FF454554" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <TextBlock TextWrapping="Wrap"  FontSize="{TemplateBinding FontSize}" Width="95" x:Name="txtBtnRond" Foreground="White" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-100,0,0,0" TextAlignment="Center" FontFamily="Century Gothic" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ellipseBtnRond" Property="Stroke" Value="#FFADBECD" />
                                <Setter TargetName="ellipseBtnRond" Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF898897" Offset="0"/>
                                            <GradientStop Color="#FF626276" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="txtBtnRond" Property="Foreground" Value="#FFEAEAEA" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <!--<Setter Property="Border.BorderBrush" Value="White" />-->
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleGris">
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#D4D7DE" />
        <Setter Property="Foreground" Value="#8E8E8E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image VerticalAlignment="Center" Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="15" RenderTransformOrigin="0.5,0.5" >
                                
                            </Image>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              Margin="5 0 0 0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#BEC1C7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleGrisBack">
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#D4D7DE" />
        <Setter Property="Foreground" Value="#8E8E8E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image VerticalAlignment="Center" Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="15" RenderTransformOrigin="0.5,0.5" >
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              Margin="5 0 0 0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#BEC1C7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="styleGrisRightIco">
        <Setter Property="Margin" Value="2 5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="#D4D7DE" />
        <Setter Property="Foreground" Value="#8E8E8E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="12" Background="{TemplateBinding Background}" BorderBrush="#8E8E8E" BorderThickness="1,1,1,1"  >
                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
        							Content="{TemplateBinding Content}" 
        							VerticalAlignment="Center"/>
                            <Image VerticalAlignment="Center" Margin="5 0 0 0" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="15" RenderTransformOrigin="0.5,0.5" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#BEC1C7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Border.BorderBrush" Value="White" />
                            <Setter Property="Background" Value="#8E8E8E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="CBStyleEtatImp" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="75 5"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="10" x:Name="bdrCheck" Width="{TemplateBinding Width}" BorderBrush="#FFC1C8D6" BorderThickness="2" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Height="{TemplateBinding Height}" Margin="0" Grid.Row="1" VerticalAlignment="Top"  Background="#FFD3D6DD">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="23"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <BulletDecorator  x:Name="test" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <BulletDecorator.Bullet>
                                    <Ellipse  x:Name="checkEllipse" Fill="WhiteSmoke" HorizontalAlignment="Left" Height="14" Margin="0" Grid.Row="0" Stroke="Black" VerticalAlignment="Bottom" Width="14" StrokeThickness="0"/>
                                </BulletDecorator.Bullet>
                            </BulletDecorator>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#FF6DCD52" TargetName="checkEllipse"/>
                            <Setter Property="Background" Value="#FF3C4A6D" TargetName="bdrCheck"/>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#FFD5D5D5" TargetName="bdrCheck"/>
                            <Setter Property="Fill" Value="White" TargetName="checkEllipse"/>
                            <Setter Property="BorderThickness" Value="2" TargetName="bdrCheck"/>

                        </MultiTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#8E8E8E" TargetName="bdrCheck"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        </Style>


</ResourceDictionary>